version: '3.8'

services:
  # Traefik service removed - assuming one is already running externally

  db:
    image: mysql:8.0
    container_name: mysql_db # Consider a more specific name like mb_bank_mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - internal # db only needs internal communication
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mb_bank_app
    depends_on:
      - db
    environment:
      NODE_ENV: production
      PORT: ${PORT:-3000}
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - internal # For communication with the db
      - proxy_network # Connect to the existing external Traefik network (!!! REPLACE IF NEEDED !!!)
    labels:
      # These labels are for the *existing* external Traefik
      - "traefik.enable=true"
      # Ensure this domain points to your VPS IP
      - "traefik.http.routers.mb-bank-app.rule=Host(`pm.danhtrong.com`)" # !!! REPLACE DOMAIN !!!
      - "traefik.http.routers.mb-bank-app.entrypoints=websecure" # Use the HTTPS entrypoint
      - "traefik.http.routers.mb-bank-app.tls.certresolver=letsencrypt" # Use the cert resolver configured in your main Traefik
      # Make sure the port matches the EXPOSE port in your Dockerfile and the PORT env var
      - "traefik.http.services.mb-bank-app.loadbalancer.server.port=${PORT:-3000}"
      # Add network label to explicitly tell Traefik which network to use for this app
      - "traefik.docker.network=proxy_network" # !!! REPLACE WITH YOUR ACTUAL TRAEFIK NETWORK NAME !!!
    restart: unless-stopped

networks:
  # This network is created by this compose file for app <-> db communication
  internal:
    name: mb_bank_internal_network
    internal: true

  # This network connects to the existing Traefik network
  proxy_network: # !!! REPLACE WITH YOUR ACTUAL TRAEFIK NETWORK NAME !!!
    external: true
    name: proxy_network # !!! Sometimes needed, ensure this matches the actual external network name !!!

volumes:
  mysql_data:
    driver: local 